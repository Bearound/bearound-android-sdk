name: Publish SDK and Create TAG and Release

on:
  workflow_dispatch:

jobs:
  auto-tag-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Read SDK version from gradle.properties
        id: version
        run: |
          version=$(grep SDK_VERSION gradle.properties | cut -d'=' -f2 | tr -d '[:space:]')
          echo "sdk_version=$version" >> $GITHUB_OUTPUT

      - name: Replace SDK version in README badge
        run: |
          sdk_version="${{ steps.version.outputs.sdk_version }}"
          branch="$(echo "${GITHUB_REF}" | sed 's|refs/heads/||')"
          
          echo "Substituindo v{{SDK_VERSION}} por v$sdk_version no README.md"
          sed -i.bak "s/v{{SDK_VERSION}}/v$sdk_version/g" README.md
          rm README.md.bak
          
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          
          if git diff --quiet; then
            echo "README.md is already updated. Nothing to commit."
          else
            git add README.md
            git commit -m "Update SDK version badge to v$sdk_version"
            git remote set-url origin https://${{ secrets.GH_PUSH_TOKEN }}@github.com/${{ github.repository }}
            git push origin "$branch"
          fi  

      - name: Check if tag already exists
        id: tagcheck
        run: |
          tag="v${{ steps.version.outputs.sdk_version }}"
          if git rev-parse "$tag" >/dev/null 2>&1; then
            echo "Tag $tag already exists. Closing workflow."
            exit 1
          else
            echo "Tag $tag does not exist yet. Continuing..."
          fi

      - name: Create and push Git tag (using GH_PUSH_TOKEN)
        run: |
          tag="v${{ steps.version.outputs.sdk_version }}"
          echo "Creating and pushing tag: $tag"
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag "$tag"
          git remote set-url origin https://${{ secrets.GH_PUSH_TOKEN }}@github.com/${{ github.repository }}
          git push origin "$tag"

      - name: Trigger JitPack build via API
        run: |
          tag="v${{ steps.version.outputs.sdk_version }}"
          repo="github.com/${{ github.repository }}"

          echo "Triggering JitPack build for $repo tag $tag..."
          curl -X POST "https://jitpack.io/api/builds/$repo/$tag" \
          -H "Content-Type: application/json" \
          -d '{}'  

      - name: Publish to GitHub Packages
        run: ./gradlew :sdk:publishReleasePublicationToGitHubPackagesRepository
        env:
          GPR_USER: ${{ secrets.GPR_USER }}
          GPR_KEY: ${{ secrets.GPR_KEY }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.sdk_version }}
          name: Release v${{ steps.version.outputs.sdk_version }}
          body: |
            New SDK version published automatically ðŸŽ‰
            - Version: `${{ steps.version.outputs.sdk_version }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PUSH_TOKEN }}